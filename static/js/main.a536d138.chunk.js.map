{"version":3,"sources":["components/Preloader/Preloader.module.css","assets/img/reichbaum-logo.svg","components/Aside/Aside.module.css","assets/img/reich.jpg","components/Contacts/Contacts.module.css","components/Frontpage/Frontpage.module.css","api/api.ts","api/repos-api.ts","redux/RepoReducer.ts","components/Paginator/Paginator.tsx","components/Repos/SingleRepo.tsx","components/Repos/ReposResults.tsx","components/Preloader/Preloader.tsx","components/Repos/ReposForm.tsx","components/Repos/ReposList.tsx","redux/store.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Aside/Aside.tsx","assets/theme/theme.ts","components/Aboutme/Aboutme.tsx","components/Contacts/Contacts.tsx","components/Frontpage/Frontpage.tsx","App.tsx","serviceWorker.js","index.js","components/Repos/Repos.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css"],"names":["module","exports","instance","axios","create","baseURL","ReposApi","org","per_page","page","get","params","then","res","watchGetReposSaga","workerReposSaga","rootReposSaga","initialState","repositories","loading","error","number_of_pages","current_page","error_message","actions","type","data","payload","takeEvery","put","repos","headers","link","includes","link_array","match","RegExp","message","all","repoReducer","state","action","Paginator","onPageChanged","Pagination","onChange","count","color","SingleRepo","name","html_url","forks_count","stargazers_count","watchers_count","description","className","css","singleRepo","href","features","iconWrapper","fontSize","ReposResults","useSelector","dispatch","useDispatch","event","Box","length","List","map","r","ListItem","key","id","Preloader","preloader","ReposForm","initialValues","onSubmit","values","setSubmitting","isSubmitting","repoForm","repoContainer","label","margin","variant","inputText","component","TextField","inputNumber","Button","disabled","ReposList","Typography","gutterBottom","Link","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","Header","header","Container","logo","process","src","alt","title","Navbar","nav","to","activeClassName","active","Aside","aside","theme","createMuiTheme","palette","primary","main","secondary","typography","h1","h2","Aboutme","Grid","container","item","xs","sm","me","width","paragraph","target","rel","Divider","ListItemIcon","ListItemText","Timeline","align","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","ListItemLink","props","Contacts","contactsList","htmlColor","ListItemTask","text","Frontpage","list","AppContainer","spacing","exact","path","render","App","StrictMode","ThemeProvider","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a536d138.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1mKY0\"};","module.exports = __webpack_public_path__ + \"static/media/reichbaum-logo.e3bf0b87.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__1qVwO\"};","module.exports = __webpack_public_path__ + \"static/media/reich.2167a108.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__3tV7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Frontpage_list__1f-ld\"};","import axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://api.github.com/'\r\n})","import {instance} from './api'\r\nimport {AxiosResponse} from 'axios'\r\n\r\nexport type GetReposType = {\r\n  org: string\r\n  per_page: number\r\n  page?: number\r\n  current_page?: number\r\n  number_of_pages: number\r\n}\r\n\r\nexport const ReposApi = {\r\ngetRepos(org: string,\r\n         per_page = 10,\r\n         page = 1):Promise<AxiosResponse<any>> {\r\n  return instance.get(`orgs/${org}/repos`, {\r\n    params: {per_page, page}\r\n  }).then(res => res)\r\n}\r\n}","import {GetReposType, ReposApi} from '../api/repos-api'\r\nimport {InferActionsType} from './store'\r\nimport {put, takeEvery, all} from 'redux-saga/effects'\r\n\r\nconst initialRepo = {\r\n  id: 1296269,\r\n  node_id: 'MDEwOlJlcG9zaXRvcnkxMjk2MjY5',\r\n  name: 'Hello-World',\r\n  full_name: 'octocat/Hello-World',\r\n  owner: {\r\n    login: 'octocat',\r\n    id: 1,\r\n    node_id: 'MDQ6VXNlcjE=',\r\n    avatar_url: 'https://github.com/images/error/octocat_happy.gif',\r\n    gravatar_id: '',\r\n    url: 'https://api.github.com/users/octocat',\r\n    html_url: 'https://github.com/octocat',\r\n    followers_url: 'https://api.github.com/users/octocat/followers',\r\n    following_url: 'https://api.github.com/users/octocat/following{/other_user}',\r\n    gists_url: 'https://api.github.com/users/octocat/gists{/gist_id}',\r\n    starred_url: 'https://api.github.com/users/octocat/starred{/owner}{/repo}',\r\n    subscriptions_url: 'https://api.github.com/users/octocat/subscriptions',\r\n    organizations_url: 'https://api.github.com/users/octocat/orgs',\r\n    repos_url: 'https://api.github.com/users/octocat/repos',\r\n    events_url: 'https://api.github.com/users/octocat/events{/privacy}',\r\n    received_events_url: 'https://api.github.com/users/octocat/received_events',\r\n    type: 'User',\r\n    site_admin: false\r\n  },\r\n  private: false,\r\n  html_url: 'https://github.com/octocat/Hello-World',\r\n  description: 'This your first repo!',\r\n  fork: false,\r\n  url: 'https://api.github.com/repos/octocat/Hello-World',\r\n  archive_url: 'http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}',\r\n  assignees_url: 'http://api.github.com/repos/octocat/Hello-World/assignees{/user}',\r\n  blobs_url: 'http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}',\r\n  branches_url: 'http://api.github.com/repos/octocat/Hello-World/branches{/branch}',\r\n  collaborators_url: 'http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}',\r\n  comments_url: 'http://api.github.com/repos/octocat/Hello-World/comments{/number}',\r\n  commits_url: 'http://api.github.com/repos/octocat/Hello-World/commits{/sha}',\r\n  compare_url: 'http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}',\r\n  contents_url: 'http://api.github.com/repos/octocat/Hello-World/contents/{+path}',\r\n  contributors_url: 'http://api.github.com/repos/octocat/Hello-World/contributors',\r\n  deployments_url: 'http://api.github.com/repos/octocat/Hello-World/deployments',\r\n  downloads_url: 'http://api.github.com/repos/octocat/Hello-World/downloads',\r\n  events_url: 'http://api.github.com/repos/octocat/Hello-World/events',\r\n  forks_url: 'http://api.github.com/repos/octocat/Hello-World/forks',\r\n  git_commits_url: 'http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}',\r\n  git_refs_url: 'http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}',\r\n  git_tags_url: 'http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}',\r\n  git_url: 'git:github.com/octocat/Hello-World.git',\r\n  issue_comment_url: 'http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}',\r\n  issue_events_url: 'http://api.github.com/repos/octocat/Hello-World/issues/events{/number}',\r\n  issues_url: 'http://api.github.com/repos/octocat/Hello-World/issues{/number}',\r\n  keys_url: 'http://api.github.com/repos/octocat/Hello-World/keys{/key_id}',\r\n  labels_url: 'http://api.github.com/repos/octocat/Hello-World/labels{/name}',\r\n  languages_url: 'http://api.github.com/repos/octocat/Hello-World/languages',\r\n  merges_url: 'http://api.github.com/repos/octocat/Hello-World/merges',\r\n  milestones_url: 'http://api.github.com/repos/octocat/Hello-World/milestones{/number}',\r\n  notifications_url: 'http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}',\r\n  pulls_url: 'http://api.github.com/repos/octocat/Hello-World/pulls{/number}',\r\n  releases_url: 'http://api.github.com/repos/octocat/Hello-World/releases{/id}',\r\n  ssh_url: 'git@github.com:octocat/Hello-World.git',\r\n  stargazers_url: 'http://api.github.com/repos/octocat/Hello-World/stargazers',\r\n  statuses_url: 'http://api.github.com/repos/octocat/Hello-World/statuses/{sha}',\r\n  subscribers_url: 'http://api.github.com/repos/octocat/Hello-World/subscribers',\r\n  subscription_url: 'http://api.github.com/repos/octocat/Hello-World/subscription',\r\n  tags_url: 'http://api.github.com/repos/octocat/Hello-World/tags',\r\n  teams_url: 'http://api.github.com/repos/octocat/Hello-World/teams',\r\n  trees_url: 'http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}',\r\n  clone_url: 'https://github.com/octocat/Hello-World.git',\r\n  mirror_url: 'git:git.example.com/octocat/Hello-World',\r\n  hooks_url: 'http://api.github.com/repos/octocat/Hello-World/hooks',\r\n  svn_url: 'https://svn.github.com/octocat/Hello-World',\r\n  homepage: 'https://github.com',\r\n  language: null,\r\n  forks_count: 9,\r\n  stargazers_count: 80,\r\n  watchers_count: 80,\r\n  size: 108,\r\n  default_branch: 'master',\r\n  open_issues_count: 0,\r\n  is_template: true,\r\n  topics: [\r\n    'octocat',\r\n    'atom',\r\n    'electron',\r\n    'api'\r\n  ],\r\n  has_issues: true,\r\n  has_projects: true,\r\n  has_wiki: true,\r\n  has_pages: false,\r\n  has_downloads: true,\r\n  archived: false,\r\n  disabled: false,\r\n  visibility: 'public',\r\n  pushed_at: '2011-01-26T19:06:43Z',\r\n  created_at: '2011-01-26T19:01:12Z',\r\n  updated_at: '2011-01-26T19:14:43Z',\r\n  permissions: {\r\n    admin: false,\r\n    push: false,\r\n    pull: true\r\n  },\r\n  template_repository: null,\r\n  temp_clone_token: 'ABTLWHOULUVAXGTRYU7OC2876QJ2O',\r\n  delete_branch_on_merge: true,\r\n  subscribers_count: 42,\r\n  network_count: 0,\r\n  license: {\r\n    key: 'mit',\r\n    name: 'MIT License',\r\n    spdx_id: 'MIT',\r\n    url: 'https://api.github.com/licenses/mit',\r\n    node_id: 'MDc6TGljZW5zZW1pdA=='\r\n  }\r\n}\r\nexport type InitialRepoType = typeof initialRepo\r\n\r\nconst initialState = {\r\n  repositories: [] as Array<InitialRepoType>,\r\n  org: '',\r\n  loading: false,\r\n  error: false,\r\n  number_of_pages: 1,\r\n  per_page: 10,\r\n  current_page: 1,\r\n  error_message: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst repoReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'REPOS/SET_REPOS':\r\n      return {...state, repositories: [], loading: true, error: false, number_of_pages: 0}\r\n    case 'REPOS/SET_REPOS_SUCCESS':\r\n      return {\r\n        ...state, repositories: action.payload,\r\n        loading: false, error: false,\r\n        org: action.org,\r\n        number_of_pages: action.number_of_pages,\r\n        per_page: action.per_page,\r\n        current_page: action.current_page\r\n      }\r\n    case 'REPOS/SET_REPOS_FAILED':\r\n      return {...state, repositories: [], loading: false, error: true, number_of_pages: 0, error_message: action.error_message}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setRepos: () => ({type: 'REPOS/SET_REPOS'} as const),\r\n  setReposSuccess: (data: Array<InitialRepoType>, org: string,\r\n                    number_of_pages: number, per_page: number, current_page: number) => ({\r\n    type: 'REPOS/SET_REPOS_SUCCESS',\r\n    payload: data, org: org, number_of_pages, per_page, current_page\r\n  } as const),\r\n  setReposFailed: (error_message: string) => ({type: 'REPOS/SET_REPOS_FAILED', error_message} as const),\r\n  fetchRepos: (data: object, page: number) => ({type: 'FETCHED_REPOS', data, page} as const)\r\n}\r\n\r\nexport function* watchGetReposSaga() {\r\n  yield takeEvery<any>('FETCHED_REPOS', workerReposSaga)\r\n}\r\n\r\ntype workerReposSagaType = {\r\n  data: GetReposType\r\n  type: string\r\n  page: number\r\n}\r\n\r\nexport function* workerReposSaga(payload: workerReposSagaType) {\r\n  yield put(actions.setRepos())\r\n  let {org, per_page, number_of_pages} = payload.data\r\n  try {\r\n    const repos = yield ReposApi.getRepos(org, per_page, payload.page)\r\n    if (repos.headers.link) {\r\n      if (repos.headers.link.includes('last')) {\r\n        let link_array = repos.headers.link.match(new RegExp('next(.*)last'))\r\n        number_of_pages = link_array[1].match(/&page=(\\d+).*$/)[1]\r\n      }\r\n    }\r\n    yield put(actions.setReposSuccess(repos.data, org, number_of_pages, per_page, payload.page))\r\n\r\n\r\n  } catch (error) {\r\n    yield put(actions.setReposFailed(error.message))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function* rootReposSaga() {\r\n  yield all([\r\n    watchGetReposSaga()\r\n  ])\r\n}\r\n\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\nexport default repoReducer\r\n\r\n\r\n\r\n","import React, {FC} from 'react'\r\nimport {Pagination} from '@material-ui/lab'\r\n\r\ntype PaginatorType = {\r\n  onPageChanged: (event: object, page: number) => void\r\n  number_of_pages: number\r\n  current_page: number\r\n}\r\n\r\nconst Paginator: FC<PaginatorType> = ({onPageChanged, number_of_pages, current_page}) => {\r\n  return <Pagination onChange={onPageChanged} count={number_of_pages} page={current_page}\r\n                     color=\"primary\" />\r\n}\r\n\r\nexport default Paginator","import React, {FC} from 'react'\r\nimport css from './Repos.module.css'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\ntype SingleRepoType = {\r\n  name: string\r\n  html_url: string\r\n  forks_count: number\r\n  stargazers_count: number\r\n  watchers_count: number\r\n  description: string\r\n}\r\n\r\nconst SingleRepo: FC<SingleRepoType> = ({name,\r\n                                          html_url,\r\n                                          forks_count,\r\n                                          stargazers_count,\r\n                                          watchers_count,\r\n                                        description}) => {\r\n  return <div className={css.singleRepo}>\r\n    <a href={html_url} className={css.link}>{name}</a>\r\n    <p>{description}</p>\r\n    <div className={css.features}>\r\n      <div className={css.iconWrapper}><StarIcon fontSize='small'/>Star <span>{stargazers_count}</span></div>\r\n      <div className={css.iconWrapper}><DeviceHubIcon fontSize='small'/>Fork <span>{forks_count}</span></div>\r\n      <div className={css.iconWrapper}><VisibilityIcon fontSize='small'/>Watch <span>{watchers_count}</span></div>\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\n\r\nexport default SingleRepo","import React from 'react'\r\nimport Paginator from '../Paginator/Paginator'\r\nimport {Box, List, ListItem} from '@material-ui/core'\r\nimport {actions, InitialRepoType} from '../../redux/RepoReducer'\r\nimport SingleRepo from './SingleRepo'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../redux/store'\r\n\r\nexport const ReposResults = () => {\r\n  const repos = useSelector((state: AppStateType) => state.repos.repositories)\r\n  const org = useSelector((state: AppStateType) => state.repos.org)\r\n  const number_of_pages = useSelector((state: AppStateType) => state.repos.number_of_pages)\r\n  const current_page = useSelector((state: AppStateType) => state.repos.current_page)\r\n  const per_page = useSelector((state: AppStateType) => state.repos.per_page)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onPageChanged = (event: object, page: number) => {\r\n    const PaginatorValues = {\r\n      org, number_of_pages, current_page, per_page\r\n    }\r\n    dispatch(actions.fetchRepos(PaginatorValues, page))\r\n  }\r\n\r\n  return <Box>\r\n    {repos.length !== 0 ? <Paginator onPageChanged={onPageChanged}\r\n                                     number_of_pages={number_of_pages}\r\n                                     current_page={current_page} /> : null}\r\n    <List>\r\n      {repos.map((r: InitialRepoType) => <ListItem key={r.id}>\r\n        <SingleRepo name={r.name}\r\n                    html_url={r.html_url}\r\n                    forks_count={r.forks_count}\r\n                    stargazers_count={r.stargazers_count}\r\n                    watchers_count={r.watchers_count}\r\n                    description={r.description}\r\n\r\n        />\r\n      </ListItem>)}\r\n    </List>\r\n    {repos.length !== 0 ? <Paginator onPageChanged={onPageChanged}\r\n                                     number_of_pages={number_of_pages}\r\n                                     current_page={current_page} /> : null}\r\n  </Box>\r\n}","import React from 'react';\r\nimport css from './Preloader.module.css';\r\n\r\nconst Preloader = () => {\r\n  return <div className={css.preloader}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../redux/store'\r\nimport {Field, Form, Formik} from 'formik'\r\nimport {GetReposType} from '../../api/repos-api'\r\nimport {actions} from '../../redux/RepoReducer'\r\nimport {ReposResults} from './ReposResults'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport css from './Repos.module.css'\r\nimport {Box, Button} from '@material-ui/core'\r\nimport {TextField} from 'formik-material-ui'\r\n\r\nexport const ReposForm = () => {\r\n\r\n  const error = useSelector((state: AppStateType) => state.repos.error)\r\n  const loading = useSelector((state: AppStateType) => state.repos.loading)\r\n  const dispatch = useDispatch()\r\n\r\n  const org = useSelector((state: AppStateType) => state.repos.org)\r\n  const number_of_pages = useSelector((state: AppStateType) => state.repos.number_of_pages)\r\n  const per_page = useSelector((state: AppStateType) => state.repos.per_page)\r\n  const error_message = useSelector((state: AppStateType) => state.repos.error_message)\r\n\r\n  return <Formik\r\n    initialValues={{\r\n      org: org ? org : 'google',\r\n      per_page: per_page ? per_page : 10,\r\n      number_of_pages: number_of_pages ? number_of_pages : 1\r\n    }}\r\n    onSubmit={(values: GetReposType, {setSubmitting}) => {\r\n      dispatch(actions.fetchRepos(values, 1))\r\n      setSubmitting(false)\r\n    }}>\r\n    {({isSubmitting}) => (\r\n      <Form className={css.repoForm}>\r\n        <Box className={css.repoContainer}>\r\n          <Field\r\n            name=\"org\"\r\n            label=\"Organisation\"\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            className={css.inputText}\r\n            component={TextField}\r\n          />\r\n          <Field\r\n            name=\"per_page\"\r\n            label=\"Per page\"\r\n            type=\"number\"\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            className={css.inputNumber}\r\n            component={TextField}\r\n          />\r\n          <Field type=\"hidden\" name=\"number_of_pages\"/>\r\n        </Box>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n          Submit\r\n        </Button>\r\n        {\r\n          loading\r\n            ? <Preloader />\r\n            : error\r\n            ? <p>Error! {error_message}</p>\r\n            : <ReposResults />\r\n        }\r\n      </Form>\r\n\r\n    )}\r\n  </Formik>\r\n}","import React from 'react'\r\nimport {ReposForm} from './ReposForm'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport {Link, Typography} from '@material-ui/core'\r\n\r\nexport const ReposList = () => {\r\n  return <div>\r\n    <Typography variant=\"h1\" component=\"h1\" gutterBottom>\r\n      <GitHubIcon fontSize='large'/> List organization repositories\r\n    </Typography>\r\n    <Link variant='body2' href='https://github.com/Reichbaum/testjob'>Link to Github</Link>\r\n    <ReposForm/>\r\n  </div>\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport repoReducer, {rootReposSaga} from './RepoReducer'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nconst rootReducer = combineReducers({\r\n    repos: repoReducer\r\n  }\r\n)\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\r\n\r\nsagaMiddleware.run(rootReposSaga)\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type InferActionsType<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport default store","import React from 'react'\r\nimport logo from '../../assets/img/reichbaum-logo.svg'\r\nimport css from './Header.module.css'\r\nimport {Container, Link} from '@material-ui/core'\r\n\r\nconst Header = () => {\r\n  return <header className={css.header}>\r\n    <Container>\r\n      <a className={css.logo} href={process.env.PUBLIC_URL + '/'}><img src={logo} alt='Reichbaum'/></a>\r\n    <p className={css.title}>Frontender React</p> <Link variant='body2' href='https://github.com/Reichbaum/testjob'>Github</Link>\r\n\r\n    </Container>\r\n  </header>\r\n}\r\nexport default Header","import React from 'react';\r\nimport css from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={css.nav}>\r\n    <ul>\r\n      <li>\r\n        <NavLink to='/test' activeClassName={css.active}>Тестовое задание</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/aboutme' activeClassName={css.active}>Обо мне</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/contacts' activeClassName={css.active}>Контакты</NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport css from './Aside.module.css'\r\nimport Navbar from '../Navbar/Navbar'\r\n\r\nconst Aside = () => {\r\n  return <aside className={css.aside}>\r\n    <Navbar/>\r\n  </aside>\r\n}\r\n\r\nexport default Aside","import {createMuiTheme} from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#6b5b95',\r\n    },\r\n    secondary: {\r\n      main: '#6dbd1c',\r\n    },\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"2.6rem\"\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\"\r\n    }\r\n  },\r\n});\r\n\r\nexport default theme","import React from 'react'\r\nimport {Divider, Grid, List, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core'\r\nimport me from '../../assets/img/reich.jpg'\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport {\r\n  Timeline,\r\n  TimelineConnector, TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineOppositeContent,\r\n  TimelineSeparator\r\n} from '@material-ui/lab'\r\n\r\nconst Aboutme = () => {\r\n  return <div>\r\n    <Typography variant='h1' component='h1' gutterBottom>\r\n      Привет, меня зовут Юлия\r\n    </Typography>\r\n    <Grid container>\r\n      <Grid item xs={12} sm={3}>\r\n        <img src={me} width={150} className='avatar' alt='Reichbaum Julia'/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={9}>\r\n        <Typography variant=\"body1\" paragraph>\r\n          Мне 38 лет, я родом из Иркутска, сейчас живу в Анапе. 7 лет занимаюсь фрилансерской веб-разработкой -\r\n          разрабатываю и поддерживаю сайты, в основном, по рекомендациям моих клиентов - <a\r\n          href='https://reichbaum.ru/projects' target='_blank' rel='noopener noreferrer'>вот они</a>. Попробовав себя в\r\n          качества\r\n          наставника на онлайн-курсах по HTML и CSS, я поняла, что работая в одиночку я не развиваюсь, поэтому\r\n          приняла решение - изучить актуальные инструменты фронтенда и попробовать себя в командной работе на\r\n          современном проекте.\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Typography variant=\"body1\" paragraph>\r\n      Мои скиллы - хорошо знаю HTML, CSS, адаптивную верстку, владею графическими программами. Javacript - на уровне\r\n      реализации не очень сложных практических задач, сейчас изучаю теоретическую часть. PHP - на рабочем уровне, в\r\n      силу плотной работы с Вордпрессом. Разобралась с препроцессорами (Less/Sass), научилась Git, поняла суть Gulp,\r\n      использую в работе. В теорию углубляюсь по мере надобности, умею гуглить, находить и\r\n      адаптировать код под собственные нужды. Английский - читаю хорошо, разговорный - на уровне бытового общения.\r\n\r\n    </Typography>\r\n    <Typography variant=\"body1\" paragraph>\r\n      Сейчас очень интересен React и сопутствующие технологии - знакома с Typescript, Redux, Axios, Thunk/Saga, Formik,\r\n      Material UI. Хочу в команду под начало крутых\r\n      разработчиков для работы и дальнейшего обучения на боевых задачах. Текущие проекты времени почти не требуют, новых\r\n      не беру,\r\n      имею\r\n      цель.\r\n    </Typography>\r\n    <Divider className='gutterBottom'/>\r\n    <Typography variant=\"h2\" component=\"h2\">\r\n      Образование\r\n    </Typography>\r\n    <List>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <NotInterestedIcon color='error'/>\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary='2 курса ВятГТУ Электропривод и автоматизация промышленных установок (хотела на ИТ, завалила физику. Не то.)'/>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <NotInterestedIcon color='error'/>\r\n        </ListItemIcon>\r\n        <ListItemText primary='1 курс ИГУ Теоретическая физика (на ИТ не восстановили из-за несоответствия\r\n      программы. Вообще не то.)'/>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <CheckCircleOutlineIcon color='secondary'/>\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary='ИрГУПС Управление персоналом (зачислили вместо отмененной специальности ИТ. Решила, что не судьба, осталась тут.'/>\r\n      </ListItem>\r\n    </List>\r\n    <Typography variant=\"body2\" paragraph>\r\n      В общем, по теоретической части классического программирования я обладаю не самыми глубокими знаниями, но имею\r\n      технический склад ума и\r\n      способность разобраться и решить любую взятую на себя задачу, разобрав ее на более мелкие.\r\n    </Typography>\r\n    <Divider className='gutterBottom'/>\r\n    <Typography variant=\"h2\" component=\"h2\">\r\n      Работа\r\n    </Typography>\r\n    <Timeline align=\"alternate\">\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography color=\"textSecondary\">Октябрь, 2018 — Настоящее время</Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot/>\r\n          <TimelineConnector/>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography>Контракт на разработку и поддержку сайта <a href='https://www.bahn-erlebnisreise.de/'\r\n                                                                  target='_blank' rel=\"noopener noreferrer\">Die\r\n            Eisenbahn Erlebnisreise</a> (Deutchland, Düsseldorf). <br/>\r\n            CMS Wordpress - редизайн, решение всех задач по внедрению нового\r\n            функционала (PHP + Javascript). Интеграция с аггрегатором Journaway.com. <a\r\n              href='https://reichbaum.ru/projects' target='_blank' rel=\"noopener noreferrer\">Всякий\r\n              фриланс.</a></Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography color=\"textSecondary\">Декабрь, 2012 — Сентябрь 2018</Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot/>\r\n          <TimelineConnector/>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography>Свой небольшой интернет-магазин для семейного бизнеса <a\r\n            href='https://ultrairk.ru' target='_blank' rel=\"noopener noreferrer\">Автосигнализации</a> (сейчас не\r\n            обновляется) -\r\n            разработка сайта\r\n            CMS Opencart, наполнение\r\n            контентом, развитие проекта. Фриланс. </Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography color=\"textSecondary\">Апрель, 2010 —\r\n            Ноябрь, 2012</Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot/>\r\n          <TimelineConnector/>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography><b>ТГ ВОСТОК КОСМЕТИК, НАЧАЛЬНИК ОТДЕЛА ИНТЕРНЕТ-МАГАЗИНА</b><br/>\r\n            Реализация интернет-магазина бытовой химии и косметики Irmag.ru на базе\r\n            крупной оптовой компании — разработка идей и постановка задач техническим специалистам-разработчикам на\r\n            стороне сайта (CMS Bitrix), встраивание\r\n            магазина во внутренние процессов компании. Разработка структуры каталога,\r\n            подготовка изображений и описаний товаров, наполнение сайта контентом\r\n            (25000 наименований). Запуск интернет-магазина.</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography color=\"textSecondary\">Декабрь, 2006 — Октябрь, 2009</Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot/>\r\n          <TimelineConnector/>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography><b>ТЕЛЕКОМПАНИЯ АИСТ, ДИЗАЙНЕР-ВЕРСТАЛЬЩИК</b><br/>\r\n            Верстка еженедельной газеты и журнала на тему «Телевидение,\r\n            кино, музыка, шоу-бизнес», разработка рекламных макетов, подготовка изображений и текстов к публикации.\r\n            Дизайн полиграфии, разработка фирменного\r\n            стиля по заказу.</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography color=\"textSecondary\">Октябрь, 2004 — Сентябрь, 2006</Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot/>\r\n          <TimelineConnector/>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography><b>РЕКЛАМНО-ИЗДАТЕЛЬСКАЯ ФИРМА «ГВОЗДЬ ПЛЮС»,\r\n            ДИЗАЙНЕР-ВЕРСТАЛЬЩИК</b><br/>\r\n            Верстка еженедельного рекламного журнала-каталога, разработка рекламных\r\n            макетов и статей. Дизайн полиграфии, разработка фирменного стиля по заказу.</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography color=\"textSecondary\">Ноябрь 2001 - Сентябрь, 2004</Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot/>\r\n          <TimelineConnector/>\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography><b>ИЗДАТЕЛЬСКИЙ ДОМ «СМ НОМЕР ОДИН», ОПЕРАТОР ПК</b><br/>\r\n            Работа с табличными данными.</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    </Timeline>\r\n  </div>\r\n}\r\n\r\nexport default Aboutme","import React from 'react'\r\nimport css from './Contacts.module.css'\r\nimport {List, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core'\r\nimport FacebookIcon from '@material-ui/icons/Facebook'\r\nimport InstagramIcon from '@material-ui/icons/Instagram'\r\nimport TelegramIcon from '@material-ui/icons/Telegram'\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp'\r\nimport AppsIcon from '@material-ui/icons/Apps'\r\n\r\nconst ListItemLink = (props: any) => {\r\n  return <ListItem component=\"a\" {...props} />;\r\n}\r\n\r\nconst Contacts = () => {\r\n  return <div>\r\n    <Typography variant=\"h1\" component=\"h1\" gutterBottom>\r\n      Контакты\r\n    </Typography>\r\n    <List className={css.contactsList}>\r\n      <ListItem>\r\n        <ListItemLink href=\"https://reichbaum.ru/projects\" target='_blank' rel=\"noopener\">\r\n          <ListItemIcon>\r\n            <AppsIcon color='secondary' fontSize='large'/>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary='Porfolio'/>\r\n        </ListItemLink>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemLink href=\"https://www.facebook.com/?id=100009515889198\" target='_blank' rel=\"noopener\">\r\n          <ListItemIcon>\r\n            <FacebookIcon htmlColor='#3b5998' fontSize='large'/>\r\n          </ListItemIcon>\r\n        <ListItemText\r\n          primary='Facebook'/>\r\n        </ListItemLink>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemLink href=\"https://www.instagram.com/reichbaum.ju\" target='_blank' rel=\"noopener\">\r\n          <ListItemIcon>\r\n            <InstagramIcon htmlColor='#bc2a8d' fontSize='large'/>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary='Instagram'/>\r\n        </ListItemLink>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemLink href=\"https://resolve/?domain=ReichbaumJu\" target='_blank' rel=\"noopener\">\r\n          <ListItemIcon>\r\n            <TelegramIcon htmlColor='#0088cc' fontSize='large'/>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary='Telegram'/>\r\n        </ListItemLink>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemLink href=\"https://api.whatsapp.com/send?phone=79180635700\" target='_blank' rel=\"noopener\">\r\n          <ListItemIcon>\r\n            <WhatsAppIcon htmlColor='#4AC959' fontSize='large'/>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary='WhatsApp'/>\r\n        </ListItemLink>\r\n      </ListItem>\r\n    </List>\r\n  </div>\r\n}\r\n\r\nexport default Contacts","import React, {FC} from 'react'\r\nimport {Button, List, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport css from './Frontpage.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Frontpage = () => {\r\n  return <div>\r\n   <Typography variant=\"body1\" gutterBottom>\r\n     Задача: Разработать SPA для отображения списка репозиториев и информации по какой-либо компании\r\n      на Github. Предусмотреть поле ввода названия компании, лоадер загрузки при запросе, отображение списка\r\n      репозиториев.<br/>\r\n      В список выводимой информации должны быть включены:\r\n    </Typography>\r\n    <List className={css.list}>\r\n      <ListItemTask text='Название'/>\r\n      <ListItemTask text='URL репозитория (можно совместить с выводом имени)'/>\r\n      <ListItemTask text='Количество форков, количество watchers'/>\r\n      <ListItemTask text='Количество звезд у репозитория (stargazers)'/>\r\n    </List>\r\n    <NavLink to='/test'><Button variant=\"contained\" color=\"primary\">Перейти к заданию</Button></NavLink>\r\n  </div>\r\n}\r\n\r\ntype ListItemTaskType = {\r\n  text: string\r\n}\r\n\r\nconst ListItemTask: FC<ListItemTaskType> = ({text}) => {\r\n  return <ListItem>\r\n    <ListItemIcon>\r\n      <CheckCircleOutlineIcon color='secondary'/>\r\n    </ListItemIcon>\r\n    <ListItemText primary={text}/>\r\n  </ListItem>\r\n}\r\n\r\nexport default Frontpage","import React from 'react'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport './App.css'\nimport {ReposList} from './components/Repos/ReposList'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport {Container, Grid} from '@material-ui/core'\nimport Header from './components/Header/Header'\nimport Aside from './components/Aside/Aside'\nimport {ThemeProvider} from '@material-ui/styles'\nimport theme from './assets/theme/theme'\nimport Aboutme from './components/Aboutme/Aboutme'\nimport Contacts from './components/Contacts/Contacts'\nimport Frontpage from './components/Frontpage/Frontpage'\n\nfunction AppContainer() {\n  return (\n      <div className=\"app\">\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Header/>\n          </Grid>\n          <Container>\n            <Grid container spacing={5}>\n              <Grid item xs={12} sm={3} >\n                <Aside />\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                <div className='content'>\n                  <Switch>\n                    <Route exact path={process.env.PUBLIC_URL + '/'} render={() => <Frontpage />}/>\n                    <Route path='/test' render={() => <ReposList />}/>\n                    <Route path='/contacts' render={() => <Contacts />}/>\n                    <Route path='/aboutme' render={() => <Aboutme />}/>\n                  </Switch>\n                </div>\n              </Grid>\n            </Grid>\n          </Container>\n        </Grid>\n      </div>\n  )\n}\n\nconst App = () => {\n  return <React.StrictMode>\n    <HashRouter>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n      <AppContainer/>\n      </ThemeProvider>\n    </Provider>\n    </HashRouter>\n  </React.StrictMode>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singleRepo\":\"Repos_singleRepo__1FYmO\",\"features\":\"Repos_features__2Ihz0\",\"link\":\"Repos_link__1xldI\",\"iconWrapper\":\"Repos_iconWrapper__3RHKg\",\"repoForm\":\"Repos_repoForm__11rMD\",\"repoContainer\":\"Repos_repoContainer__2m6yR\",\"inputText\":\"Repos_inputText__3za4Z\",\"inputNumber\":\"Repos_inputNumber__1WLsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2qKuH\",\"active\":\"Navbar_active__R5XNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__33_HH\",\"title\":\"Header_title__3-9ex\",\"logo\":\"Header_logo__3zFc4\"};"],"sourceRoot":""}